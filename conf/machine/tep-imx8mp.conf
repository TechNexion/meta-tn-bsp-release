#@TYPE: Machine
#@NAME: TEP-IMX8MP
#@SOC: i.MX8MP
#@DESCRIPTION: Machine configuration for TechNexion TEP-IMX8MP
#@MAINTAINER: Joe Zhang <joe.zhang@technexion.com>

MACHINEOVERRIDES =. "mx8:mx8m:mx8mp:"

require conf/machine/include/imx-base.inc
require conf/machine/include/tune-cortexa53.inc
require conf/machine/tn-base.inc

# Kernel specifics
KERNEL_DEVICETREE = " \
			freescale/imx8mp-tep.dtb \
			freescale/imx8mp-tep-rpmsg.dtb \
		    freescale/overlays/imx8mp-tep-lvds-vl10112880.dtbo \
		    freescale/overlays/imx8mp-tep-lvds-vl15010276.dtbo \
		    freescale/overlays/imx8mp-tep-lvds-vl156192108.dtbo \
		    freescale/overlays/imx8mp-tep-lvds-vl215192108.dtbo \
		    freescale/overlays/imx8mp-tep-vizionlink-tevi-ap1302.dtbo \
		    freescale/overlays/imx8mp-tep-vizionlink-tevi-ov5640.dtbo \
		    freescale/overlays/imx8mp-tep-vls.dtbo \
		    freescale/overlays/imx8mp-tep-hdmi2mipi-tc358743.dtbo \
		    freescale/overlays/imx8mp-tep-vizionpanel-vl10112880.dtbo \
		    freescale/overlays/imx8mp-tep-vizionpanel-vl15010276.dtbo \
		    freescale/overlays/imx8mp-tep-vizionpanel-vl215192108.dtbo \
"

EXTRA_OEMAKE_append_pn-linux-tn-imx = " DTC_FLAGS='-@ -H epapr'"

# U-boot specifics
UBOOT_CONFIG = "sd fspi"
UBOOT_CONFIG[sd] = "tep-imx8mp_defconfig,sdcard"
UBOOT_CONFIG[fspi] = "tep-imx8mp_defconfig"
UBOOT_CONFIG[mfgtool] = "tep-imx8mp_defconfig"
UBOOT_DTB_NAME = "imx8mp-tep.dtb"

ATF_PLATFORM = "imx8mp"
ATF_LOAD_ADDR = "0x970000"
# Extra firmware package name, that is required to build boot container for fslc bsp
IMX_EXTRA_FIRMWARE = "firmware-imx-8m"
IMX_BOOT_SOC_TARGET = "iMX8MP"
IMX_BOOT_SEEK_mx8mp = "32"

# Set Serial console
SERIAL_CONSOLES = "115200;ttymxc1"

BOOT_SPACE = "65536"

# Set DDR FIRMWARE
DDR_FIRMWARE_NAME_mx8mp = "lpddr4_pmu_train_1d_dmem_202006.bin lpddr4_pmu_train_1d_imem_202006.bin lpddr4_pmu_train_2d_dmem_202006.bin lpddr4_pmu_train_2d_imem_202006.bin"

# WIC Image
M7_MACHINE = "tep-imx8mp"
WKS_FILE_DEPENDS_append = " imx-m7-demos-tn u-boot-fspi-image"
IMAGE_BOOTFILES += "hello_world.bin \
                    fspi_u-boot.bin \
"
WKS_FILE_virtualization = "tn-imx8-imxboot-rootfs-container.wks.in"
WIC_FSTAB_BLKDEV = "mmcblk2"
WIC_CREATE_EXTRA_ARGS_remove_virtualization = "--no-fstab-update"
WIC_PARTITION_TABLE_TYPE ?= "msdos"
IMAGE_FSTYPES_append_virtualization = " wic wic.xz wic.md5sum"
IMAGE_FSTYPES_remove_virtualization = " sdcard sdcard.bz2 sdcard.xz sdcard.md5sum"
IMAGE_BOOT_FILES += "\
    ${IMAGE_BOOTFILES} \
"

IMAGE_INSTALL_append = " se050-tools se050-ssscli lpc802-lanbypass"
IMAGE_INSTALL_remove = " bluetooth wifi"

# virtualization - docker containers
#DOCKERDISKDEPENDS = "${@bb.utils.contains('DISTRO_FEATURES', 'virtualization', 'docker-disk:do_deploy', '', d)}"
#do_image_wic[depends] += "${DOCKERDISKDEPENDS}"
#TN_DOCKER_PARTITION_IMAGE = "docker-data-partition.img"
#TN_DOCKER_PARTITION_MOUNT = "/var/lib/docker"
#TN_DOCKER_PARTITION_SIZE = "4096"
