#@TYPE: Machine
#@NAME: PICO-IMX8M
#@SOC: i.MX8MQ
#@DESCRIPTION: Machine configuration for PICO-IMX8MQ
#@MAINTAINER: Richard Hu <richard.hu@technexion.com>

MACHINEOVERRIDES =. "mx8:mx8m:mx8mq:"

require conf/machine/include/imx-base.inc
require conf/machine/include/tune-cortexa53.inc
require conf/machine/tn-base.inc

# Kernel Device Trees
KERNEL_DEVICETREE = "freescale/imx8mq-pico-pi.dtb"
# \
#                     freescale/imx8mq-pico-pi-m4.dtb \
#                     freescale/imx8mq-pico-pi-dcss-ili9881c.dtb \
#                     freescale/imx8mq-pico-pi-dcss-g080uan01.dtb \
#                     freescale/imx8mq-pico-pi-dcss-g101uan02.dtb \
#                     freescale/imx8mq-pico-pi-dcss-sn65dsi84-g156xw01.dtb \
#                     freescale/imx8mq-pico-pi-dcss-sn65dsi84-hj070na.dtb \
#                     freescale/imx8mq-pico-pi-dcss-sn65dsi84-m101nwwb.dtb \
#                     freescale/imx8mq-pico-pi-lcdif-sn65dsi84-g156xw01.dtb \
#                     freescale/imx8mq-pico-pi-lcdif-sn65dsi84-hj070na.dtb \
#                     freescale/imx8mq-pico-pi-lcdif-sn65dsi84-m101nwwb.dtb \
#                     freescale/imx8mq-pico-pi-dual.dtb \
#                     freescale/imx8mq-pico-pi-dual-sn65dsi84.dtb \
#"
# Setup the additional devicetree file
#KERNEL_DEVICETREE_append_voicehat = " freescale/imx8mq-pico-pi-voicehat.dtb"
#KERNEL_DEVICETREE_append_nfc = " freescale/imx8mq-pico-pi-nfc.dtb"

M4_MACHINE = "pico-imx8mq-pi"
IMAGE_BOOTFILES_DEPENDS += "imx-m4-demos-tn:do_deploy"
IMAGE_BOOTFILES += "hello_world.bin rpmsg_lite_pingpong_rtos_linux_remote.bin rpmsg_lite_str_echo_rtos_imxcm4.bin"

# Bootloader Specifics
UBOOT_CONFIG[sd] = "pico-imx8mq_defconfig,sdcard"
UBOOT_CONFIG[mfgtool] = "pico-imx8mq_defconfig"

# Set u-boot DTB
UBOOT_DTB_NAME = "imx8mq-pico-pi.dtb"

# Peripherals
# Set Serial console
SERIAL_CONSOLES = "115200;ttymxc0"
SERIAL_BLUETOOTH = "3000000;ttymxc1"

# WIC Image
WKS_FILE_virtualization = "tn-imx8-imxboot-rootfs-container.wks.in"
WKS_FILE_pico-imx8mq = "imx-imx-boot-bootpart.wks.in"
WIC_FSTAB_BLKDEV = "mmcblk0"
WIC_CREATE_EXTRA_ARGS_remove_virtualization = "--no-fstab-update"
WIC_PARTITION_TABLE_TYPE ?= "msdos"
IMAGE_FSTYPES_append_virtualization = " wic wic.xz wic.md5sum"
IMAGE_FSTYPES_remove_virtualization = " sdcard sdcard.bz2 sdcard.xz sdcard.md5sum"
IMAGE_BOOT_FILES += "\
    ${IMAGE_BOOTFILES} \
"

# virtualization - docker containers
DOCKERDISKDEPENDS = "${@bb.utils.contains('DISTRO_FEATURES', 'virtualization', 'docker-disk:do_deploy', '', d)}"
do_image_wic[depends] += "imx-m4-demos-tn:do_deploy ${DOCKERDISKDEPENDS}"
TN_DOCKER_PARTITION_IMAGE = "docker-data-partition.img"
TN_DOCKER_PARTITION_MOUNT = "/var/lib/docker"
TN_DOCKER_PARTITION_SIZE = "2048"

# technexion rescue-loader - UBOOT entry address for fitImages
UBOOT_ENTRYPOINT_pico-imx8mq = "0x40480000"
#UBOOT_RD_ENTRYPOINT_pico-imx8mq = "0x43800000"
#UBOOT_RD_LOADADDRESS_pico-imx8mq = "0x43800000"

