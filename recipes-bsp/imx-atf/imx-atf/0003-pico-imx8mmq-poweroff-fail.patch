diff --git a/plat/imx/imx8m/imx8m_psci_common.c b/plat/imx/imx8m/imx8m_psci_common.c
index 4c84557ba..5aac081c8 100644
--- a/plat/imx/imx8m/imx8m_psci_common.c
+++ b/plat/imx/imx8m/imx8m_psci_common.c
@@ -28,6 +28,8 @@
 #pragma weak imx_domain_suspend
 #pragma weak imx_domain_suspend_finish
 #pragma weak imx_get_sys_suspend_power_state
+#pragma weak imx_system_off
+

 int imx_validate_ns_entrypoint(uintptr_t ns_entrypoint)
 {
diff --git a/plat/imx/imx8m/imx8mm/imx8mm_psci.c b/plat/imx/imx8m/imx8mm/imx8mm_psci.c
index efac9c3ed..2ea7b73a8 100644
--- a/plat/imx/imx8m/imx8mm/imx8mm_psci.c
+++ b/plat/imx/imx8m/imx8mm/imx8mm_psci.c
@@ -14,6 +14,7 @@
 #include <gpc.h>
 #include <imx8m_psci.h>
 #include <plat_imx8.h>
+#include <lib/mmio.h>

 static const plat_psci_ops_t imx_plat_psci_ops = {
 	.pwr_domain_on = imx_pwr_domain_on,
@@ -42,3 +43,12 @@ int plat_setup_psci_ops(uintptr_t sec_entrypoint,

 	return 0;
 }
+
+void __dead2 imx_system_off(void)
+{
+	mmio_write_32(IMX_SNVS_BASE + SNVS_LPCR, SNVS_LPCR_SRTC_ENV |
+			SNVS_LPCR_DP_EN | SNVS_LPCR_TOP | SNVS_LPCR_LPWUI_EN);
+
+	while (1)
+		;
+}
diff --git a/plat/imx/imx8m/imx8mp/imx8mp_psci.c b/plat/imx/imx8m/imx8mp/imx8mp_psci.c
index 67f07d318..c054ff5ba 100644
--- a/plat/imx/imx8m/imx8mp/imx8mp_psci.c
+++ b/plat/imx/imx8m/imx8mp/imx8mp_psci.c
@@ -10,6 +10,7 @@
 #include <arch_helpers.h>
 #include <common/debug.h>
 #include <lib/psci/psci.h>
+#include <lib/mmio.h>

 #include <gpc.h>
 #include <imx8m_psci.h>
@@ -41,3 +42,12 @@ int plat_setup_psci_ops(uintptr_t sec_entrypoint,

    return 0;
 }
+
+void __dead2 imx_system_off(void)
+{
+   mmio_write_32(IMX_SNVS_BASE + SNVS_LPCR, SNVS_LPCR_SRTC_ENV |
+           SNVS_LPCR_DP_EN | SNVS_LPCR_TOP | SNVS_LPCR_LPWUI_EN);
+
+   while (1)
+       ;
+}
diff --git a/plat/imx/imx8m/imx8mq/imx8mq_psci.c b/plat/imx/imx8m/imx8mq/imx8mq_psci.c
index d6bc49c9b..d36104019 100644
--- a/plat/imx/imx8m/imx8mq/imx8mq_psci.c
+++ b/plat/imx/imx8m/imx8mq/imx8mq_psci.c
@@ -154,3 +154,12 @@ int plat_setup_psci_ops(uintptr_t sec_entrypoint,

 	return 0;
 }
+
+void __dead2 imx_system_off(void)
+{
+	mmio_write_32(IMX_SNVS_BASE + SNVS_LPCR, SNVS_LPCR_SRTC_ENV |
+			SNVS_LPCR_DP_EN | SNVS_LPCR_TOP | SNVS_LPCR_LPWUI_EN);
+
+	while (1)
+		;
+}
